#define _CRT_SECURE_NO_WARNINGS //fopen 보안경고로 인한 컴파일 오류 방지
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define N 100

typedef struct {
	char problem[N];
	char example1[N];
	char example2[N];
	char example3[N];
	char example4[N];
	int answer;
}problem_bank;



int main()
{
	int choice=0, i=0;
	problem_bank s[N];
	FILE *fp = fopen("문제은행.txt", "r");
	srand(time(NULL)); // 현재 시각을 기준으로 난수를 생성하게 해주는 함수 

	if (fp == NULL)
	{
		printf("이 파일은 존재하지 않습니다\n");
	}

	printf("[1]문제 학습    [2] 문제 연습\n");
	printf("메뉴 선택 : ");
	scanf("%d", &choice);
	printf("\n");

	if (choice == 1)
	{

		while (!feof(fp))
		{
			
			fgets(s[i].problem, N, fp);
			printf("[문제 %d] %s", i, s[i].problem);

			fgets(s[i].example1, N, fp);
			printf("1) %s",s[i].example1);

			fgets(s[i].example2, N, fp);
			printf("2) %s", s[i].example2);

			fgets(s[i].example3, N, fp);
			printf("3) %s", s[i].example3);

			fgets(s[i].example4, N, fp);
			printf("4) %s", s[i].example4);

			s[i].answer = (int *)malloc(sizeof(int) * 1);
			fscanf_s(fp, "%d", &s[i].answer);
			printf("[정답] %d\n\n", s[i].answer);
			
			
			i++;
			
		}
		printf("전체 문제 수 = %d\n", i);
					
	}
	
	if (choice == 2)
	{

		int random,j=0;
		char answer=0;

		while (!feof(fp))
		{

			fgets(s[i].problem, N, fp);
			fgets(s[i].example1, N, fp);
			fgets(s[i].example2, N, fp);
			fgets(s[i].example3, N, fp);
			fgets(s[i].example4, N, fp);
			fgets(s[i].answer, N, fp);
		
			i++;

		}
		
		while (1)
		{
			random = rand() % i;
			printf("[문제 ] %s",  s[random].problem);
			printf("1) %s", s[random].example1);
			printf("2) %s", s[random].example2);
			printf("3) %s", s[random].example3);
			printf("4) %s", s[random].example4);
			printf("답 : ");
			scanf("%s", &answer);
			printf("%s\n", s[random].answer);
			
			if (s[random].answer == answer)
			{
				printf("정답입니다!\n");
				printf("계속<0> vs 중단<-1> => ");
				scanf("%d", &j);
				if (j == -1)
					break;
			}
			

		}
	
	}

	fclose(fp);
	return 0;
}
